# Minimal CPU-only MediaPipe workspace for hand inference pipeline
# Removes GPU, hardware accelerator, and non-essential dependencies

workspace(name = "mediapipe")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

# Essential Bazel dependencies
http_archive(
    name = "bazel_skylib",
    sha256 = "74d544d96f4a5bb630d465ca8bbcfe231e3594e5aae57e1edbf17a6eb3ca2506",
    urls = [
        "https://storage.googleapis.com/mirror.tensorflow.org/github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz",
        "https://github.com/bazelbuild/bazel-skylib/releases/download/1.3.0/bazel-skylib-1.3.0.tar.gz",
    ],
)

load("@bazel_skylib//:workspace.bzl", "bazel_skylib_workspace")
bazel_skylib_workspace()

load("@bazel_skylib//lib:versions.bzl", "versions")
versions.check(minimum_bazel_version = "3.7.2")

# Essential C++ rules
http_archive(
    name = "rules_cc",
    sha256 = "4dccbfd22c0def164c8f47458bd50e0c7148f3d92002cdb459c2a96a68498241",
    urls = ["https://github.com/bazelbuild/rules_cc/releases/download/0.0.1/rules_cc-0.0.1.tar.gz"],
)

# Abseil C++ libraries (required by TensorFlow Lite)
http_archive(
    name = "com_google_absl",
    sha256 = "9b2b72d4e8367c0b843fa2bcfa2b08debbe3cee34f7aaa27de55a6cbb3e843db",
    strip_prefix = "abseil-cpp-20250814.0",
    urls = ["https://github.com/abseil/abseil-cpp/archive/refs/tags/20250814.0.tar.gz"],
)

# Protocol Buffers (required for MediaPipe)
http_archive(
    name = "com_google_protobuf",
    sha256 = "87407cd28e7a9c95d9f61a098a53cf031109d451a7763e7dd1253abf8b4df422",
    strip_prefix = "protobuf-3.19.1",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/v3.19.1.tar.gz"],
)

# Google Test framework (for testing)
http_archive(
    name = "com_google_googletest",
    sha256 = "de682ea824bfffba05b4e33b67431c247397d6175962534305136aa06f92e049",
    strip_prefix = "googletest-4ec4cd23f486bf70efcc5d2caa40f24368f752e3",
    urls = ["https://github.com/google/googletest/archive/4ec4cd23f486bf70efcc5d2caa40f24368f752e3.zip"],
)

# Zlib compression library
http_archive(
    name = "zlib",
    build_file = "@//third_party:zlib.BUILD",
    sha256 = "b3a24de97a8fdbc835b9833169501030b8977031bcb54b3b3ac13740f846ab30",
    strip_prefix = "zlib-1.2.13",
    url = "http://zlib.net/fossils/zlib-1.2.13.tar.gz",
)

# Essential logging libraries
http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "19713a36c9f32b33df59d1c79b4958434cb005b5b47dc5400a7a4b078111d9b5",
    strip_prefix = "gflags-2.2.2",
    url = "https://github.com/gflags/gflags/archive/v2.2.2.zip",
)

http_archive(
    name = "com_github_glog_glog",
    sha256 = "8a83bf982f37bb70825df71a9709fa90ea9f4447fb3c099e1d720a439d88bad6",
    strip_prefix = "glog-0.6.0",
    urls = ["https://github.com/google/glog/archive/v0.6.0.tar.gz"],
)

# Eigen linear algebra library (required by TensorFlow Lite)
http_archive(
    name = "eigen_archive",
    build_file = "@//third_party:eigen.BUILD",
    sha256 = "8586084f71f9bde545ee7fa6d00288b264a2b7ac3607b974e54d13e7162c1c72",
    strip_prefix = "eigen-3.4.0",
    urls = [
        "https://storage.googleapis.com/mirror.tensorflow.org/gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz",
        "https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz",
    ],
)

# OpenCV for image processing (CPU-only)
http_archive(
    name = "linux_opencv",
    build_file = "@//third_party:opencv_linux.BUILD",
    sha256 = "5e37b791b2fe42ed39b52d9955920b951ee42d5da95f79fbc9765a08ef733399a",
    strip_prefix = "opencv-4.5.5",
    urls = ["https://github.com/opencv/opencv/archive/4.5.5.tar.gz"],
)

# TensorFlow Lite minimal CPU-only build (TF 2.13.0)
http_archive(
    name = "org_tensorflow_lite",
    sha256 = "e4919b8ed05d1b6694eb7bab1a37a4de72a984c17cdc885a157b22e37b7062a8",
    strip_prefix = "tensorflow-2.13.0/tensorflow/lite",
    urls = ["https://github.com/tensorflow/tensorflow/archive/v2.13.0.tar.gz"],
    build_file = "@//third_party:tensorflow_lite_cpu.BUILD",
)

# Flatbuffers 2.0.0 (required by TensorFlow Lite)
http_archive(
    name = "com_github_google_flatbuffers",
    sha256 = "9ddb9031798f4f8754d00fca2f1a68ecf9d0f83dfac7239af1311e4fd9a565c4",
    strip_prefix = "flatbuffers-2.0.0",
    urls = ["https://github.com/google/flatbuffers/archive/v2.0.0.tar.gz"],
)

# XNNPACK (vendored, CPU-optimized neural network inference)
http_archive(
    name = "XNNPACK",
    sha256 = "b80ca9b0c5a37e4e1085c1e6b19321238ffd8e2922981de3dd9bc4ceea7d6e55",
    strip_prefix = "XNNPACK-b80ca9b0c5a37e4e1085c1e6b19321238ffd8e2922981de3dd9bc4ceea7d6e55",
    urls = ["https://github.com/google/XNNPACK/archive/b80ca9b0c5a37e4e1085c1e6b19321238ffd8e2922981de3dd9bc4ceea7d6e55.zip"],
)

# Load protobuf dependencies
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

# Configure OpenCV
load("//third_party:opencv_linux.bzl", "opencv_configure")
opencv_configure()